
drop table if exists HULL_PIECES;
drop table if exists FACTORY;
drop table if exists INGREDIENT_STORAGE;

drop table if exists HULL_TYPE;
drop table if exists FACTORY_TYPE;
drop table if exists WARP_GATE;
drop table if exists ENTITIY;
drop table if exists SOLAR_SYSTEM;

drop table if exists RECIPE_INGREDIENTS;
drop table if exists INGREDIENT;
drop table if exists RECIPE;

drop table if exists USERS_TO_PERMISSIONS;
drop table if exists PERMISSIONS;
drop table if exists USERS;

CREATE TABLE USERS (
    ID INT AUTO_INCREMENT,
    EMAIL_ADDRESS VARCHAR(128) NOT NULL,
    USER_PASSWORD VARCHAR(64) NOT NULL,
    PRIMARY KEY (ID),
    UNIQUE (EMAIL_ADDRESS)
);

CREATE TABLE PERMISSIONS (
    ID INT AUTO_INCREMENT,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(48),
    PRIMARY KEY (ID),
    UNIQUE (NNAME)
);

CREATE TABLE USERS_TO_PERMISSIONS (
    ID INT AUTO_INCREMENT,
    USER_ID INT,
    PERMISSION_ID INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID)
        REFERENCES USERS (ID),
    FOREIGN KEY (PERMISSION_ID)
        REFERENCES PERMISSIONS (ID),
    UNIQUE (USER_ID , PERMISSION_ID)
);

insert into PERMISSIONS (NNAME,DESCRIPTION) values ('admin','full administrative rights');
insert into USERS (EMAIL_ADDRESS,USER_PASSWORD) values ('admin','supersecret');
insert into USERS_TO_PERMISSIONS (USER_ID,PERMISSION_ID) values(1,1);

CREATE TABLE RECIPE (
    ID INT AUTO_INCREMENT,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256) DEFAULT '',
    TOTAL_PROGRESS INT,
    PRIMARY KEY (ID),
    UNIQUE (NNAME)
);

CREATE TABLE INGREDIENT (
    ID INT AUTO_INCREMENT,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256) DEFAULT '',
    MASS_PER_UNIT DOUBLE DEFAULT 1,
    PRIMARY KEY (ID),
    UNIQUE (NNAME)
);

CREATE TABLE RECIPE_INGREDIENTS (
    ID INT AUTO_INCREMENT,
    RECIPE_ID INT,
    INGREDIENT_ID INT,
    QUANTITY DOUBLE,
    PRIMARY KEY (ID),
    FOREIGN KEY (RECIPE_ID)
        REFERENCES RECIPE (ID),
    FOREIGN KEY (INGREDIENT_ID)
        REFERENCES INGREDIENT (ID)
);

CREATE TABLE SOLAR_SYSTEM (
    ID INT AUTO_INCREMENT,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256),
    PRIMARY KEY (ID),
    UNIQUE (NNAME)
);

CREATE TABLE ENTITIY (
    ID INT AUTO_INCREMENT,
    SOLAR_SYSTEM_ID INT,
    PERMISSION_ID INT DEFAULT 0,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256) DEFAULT '',
    MASS DOUBLE DEFAULT 1,
    RADIUS DOUBLE DEFAULT 1,
    REFLECTIVITY DOUBLE DEFAULT 1,
    RADIANCE DOUBLE DEFAULT 1,
    POSITION_X DOUBLE DEFAULT 0,
    POSITION_Y DOUBLE DEFAULT 0,
    FACING_X DOUBLE DEFAULT 0,
    FACING_Y DOUBLE DEFAULT 1,
    VELOCITY_X DOUBLE DEFAULT 0,
    VELOCITY_Y DOUBLE DEFAULT 0,
    PRIMARY KEY (ID),
    FOREIGN KEY (SOLAR_SYSTEM_ID)
        REFERENCES SOLAR_SYSTEM (ID),
    FOREIGN KEY (PERMISSION_ID)
        REFERENCES PERMISSIONS (ID)
);

CREATE TABLE WARP_GATE (
    ID INT AUTO_INCREMENT,
    ENTRY_SOLAR_SYSTEM_ID INT,
    ENTRY_ENTITY_ID INT,
    EXIT_SOLAR_SYSTEM_ID INT,
    EXIT_ENTITY_ID INT,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256),
    PRIMARY KEY (ID),
    FOREIGN KEY (ENTRY_SOLAR_SYSTEM_ID)
        REFERENCES SOLAR_SYSTEM (ID),
    FOREIGN KEY (ENTRY_ENTITY_ID)
        REFERENCES ENTITIY (ID),
    FOREIGN KEY (EXIT_SOLAR_SYSTEM_ID)
        REFERENCES SOLAR_SYSTEM (ID),
    FOREIGN KEY (EXIT_ENTITY_ID)
        REFERENCES ENTITIY (ID)
);

CREATE TABLE FACTORY_TYPE (
    ID INT AUTO_INCREMENT,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256) DEFAULT '',
    PRIMARY KEY (ID),
    UNIQUE (NNAME)
);

CREATE TABLE HULL_TYPE (
    ID INT AUTO_INCREMENT,
    CONTRIBUTING_FACTORY_TYPE_ID INT,
    CONTRIBUTING_FACTORY_QUANTITY double,
    CONTRIBUTING_STORAGE_TYPE_ID INT,
    CONTRIBUTING_STORAGE_QUANTITY double,
    NNAME VARCHAR(32),
    DESCRIPTION VARCHAR(256) DEFAULT '',
    SYMBOL VARCHAR(32),
    PRIMARY KEY (ID),
    FOREIGN KEY (CONTRIBUTING_FACTORY_TYPE_ID)
        REFERENCES FACTORY_TYPE (ID),
	FOREIGN KEY (CONTRIBUTING_STORAGE_TYPE_ID)
        REFERENCES INGREDIENT(ID),
    UNIQUE (NNAME)
);

CREATE TABLE INGREDIENT_STORAGE (
    ID INT AUTO_INCREMENT,
    ENTITY_ID INT,
    INGREDIENT_ID INT,
    MAXIMUM DOUBLE,
    CURRENT_QUANTITY DOUBLE,
    PRIMARY KEY (ID),
    FOREIGN KEY (ENTITY_ID)
        REFERENCES ENTITIY (ID), 
    FOREIGN KEY (INGREDIENT_ID)
        REFERENCES INGREDIENT (ID)
);

CREATE TABLE FACTORY (
    ID INT AUTO_INCREMENT,
    ENTITY_ID INT,
    FACTORY_TYPE_ID INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (ENTITY_ID)
        REFERENCES ENTITIY (ID), 
	FOREIGN KEY (FACTORY_TYPE_ID)
        REFERENCES FACTORY_TYPE (ID)

);

CREATE TABLE FACTORY_QUEUE (
    ID INT AUTO_INCREMENT,
    FACTORY_ID INT,
    RECIPE_ID int,
    PROGRESS int,
    PRIMARY KEY (ID),
    FOREIGN KEY (FACTORY_ID)
        REFERENCES FACTORY (ID) 

);

CREATE TABLE HULL_PIECES (
    ID INT AUTO_INCREMENT,
    ENTITY_ID INT,
    HULL_TYPE_ID INT,
    TILE_X INT,
    TILE_Y INT,
    HEALTH INT DEFAULT 100,
    PRIMARY KEY (ID),
    FOREIGN KEY (ENTITY_ID)
        REFERENCES ENTITIY (ID),
    FOREIGN KEY (HULL_TYPE_ID)
        REFERENCES HULL_TYPE (ID),
    UNIQUE (ENTITY_ID , TILE_X , TILE_Y)
);

